import ldap
from django_auth_ldap.config import LDAPSearch, PosixGroupType
import logging

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.WARNING)

# LDAP authentication
AUTH_LDAP_SERVER_URI = "ldap://<HOST IP>"

# Organizational Unit (OU) for LDAP users
AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=Users,dc=organization,dc=edu", ldap.SCOPE_SUBTREE, "(uid=%(user)s)")

# Organizational Unit (OU) for LDAP groups
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("ou=Groups,dc=organization,dc=edu", ldap.SCOPE_SUBTREE,
                                    "(objectClass=posixGroup)")

# Used LDAP group type
AUTH_LDAP_GROUP_TYPE = PosixGroupType()

# Mapping of user-specific LDAP values to Django values
AUTH_LDAP_USER_ATTR_MAP = {"first_name": "givenName", "last_name": "sn", "email": "mail"}

# Mapping of LDAP groups memberships to user-specific permission flags
AUTH_LDAP_USER_FLAGS_BY_GROUP = {"is_staff": "cn=admins,ou=Groups,dc=organization,dc=edu",
                                 "is_superuser": "cn=admins,ou=Groups,dc=organization,dc=edu",
                                 # "is_active": "cn=active,ou=Groups,dc=organization,dc=edu",
                                 }

# Django groups will be updated every time a user logs in (utilizing the LDAP groups)
AUTH_LDAP_MIRROR_GROUPS = True

AUTHENTICATION_BACKENDS = ('django_auth_ldap.backend.LDAPBackend',
                           'django.contrib.auth.backends.ModelBackend',)
